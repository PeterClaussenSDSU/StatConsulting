Practicum 1 
========================================================
author: Peter Claussen, Ben Derenge, Stephanie Liebl
date: 10/12/2021
autosize: true

Task
========================================================
**Determine what variables affect change in weight**.

Specifically, we were asked to look at the following specific aims:
- (SA.1) Does **total metabolic minutes have an effect on weight gain**?
- (SA.2) Does **shift have an affect on weight gain**?

Materials given:
- Practicum 1 Data
- Redacted article regarding the call center study 


Variables of Interest
========================================================

Response Variables  | Primary Predictors | Anthropometric | Physical Activity
--------------------|--------------------|----------------|------------------
 `weightgain`       | `shift`            | `gender`       | `Vig.ex.Time`
`lbs_gained`        | `Total_Met_Min`    | `Age`          | `Mod.ex.time`
                    |                    | `height`       | `Walk.ex.Time`
                    |                    | `BMI`          |
                    
First Steps                    
========================================================
- Initial data set had 392 rows
- We determined `Snumber` was a unique identifier

```{r, echo=FALSE, include=FALSE}
metrics.dat <- read.csv('Practicum 1 Data.csv',header=TRUE)
```

```{r}
nrow(metrics.dat)
```
- Thus, we removed rows where `Snumber` was missing
```{r}
metrics.dat <- metrics.dat[!is.na(metrics.dat$Snumber),]
nrow(metrics.dat)
```

Total Met Min Variable
========================================================
```{r, include=FALSE}
library(ggplot2)
```
- We found 98 missing values for `Total_Met_Min`
- So we used the Total_Met_Min formula given to us to try and impute more values
```{r}
metrics.dat$CalcTMM <- with(metrics.dat, 8*Vig.ex.Time + 4*Mod.ex.time + 3.3*Walk.ex.Time)
```

```{r, eval=FALSE,echo=FALSE, fig.align='center', fig.height=4}
ggplot(metrics.dat, aes(metrics.dat$Total_Met_Min, metrics.dat$CalcTMM)) + geom_point(col='red') + ylim(0,7000) + xlim(0, 7000) + geom_abline(intercept=0, slope=1)
```
 
- CalcTMM now only has 1 missing value 
```{r, eval=FALSE}
nrow(metrics.dat[which(is.na(metrics.dat$Total_Met_Min)),])#98
nrow(metrics.dat[which(is.na(metrics.dat$CalcTMM)),])      #1
```

Shift Variable
========================================================
<small> We found that `shift` was a categorical variable with missing values and an 'other' column </small>
```{r}
unique(metrics.dat$shift)
```

<small> We decided to combine the missing and 'other' values into one column </small>
```{r, echo=FALSE}
metrics.dat$shift[metrics.dat$shift==''] <- 'other'
shift.levels <- c(paste(c(7:11),'am',sep=''),paste(c(12,1:2),'pm',sep=''),'other')
metrics.dat$shift <- factor(metrics.dat$shift,shift.levels)
(summary(metrics.dat$shift))
```


Choosing a Response Variable
========================================================
We had two options for a response variable
- <small>`weightgain` -- a binary yes/no variable denoting if weight was gained</small>
- <small>`pounds_gained` -- a continuous variable that has only nonnegative values</small>
- <small> We cannot infer anything for values of `weightgain` that are NA, so we removed those rows </small>
```{r}
gained.dat <- metrics.dat[metrics.dat$weightgain %in% c('Yes','No'),]
dim(gained.dat)   
```
- <small> We added a column `WG` where: 'TRUE' if `weightgain` if  'Yes',  'FALSE' if 'No'</small>

Choosing a Response Variable Cont.
========================================================
- <small> Next, we imputed a 0 for values of `pounds_gained` that had 'No' for `weightgain` </small>
- <small> We went from 116 NA's --> 6 NA's </small>
```{r, include=FALSE}
gained.dat$WG <- FALSE
gained.dat$WG[gained.dat$weightgain=='Yes'] <- TRUE
```

```{r}
summary(gained.dat$pounds_gained)["NA's"]
gained.dat$pounds_gained[!gained.dat$WG] <- 0
summary(gained.dat$pounds_gained)["NA's"]
```


Choosing a Response Variable Cont.
========================================================
- Lastly, we noticed `CalcTMM` had one missing value, so we decided to remove that row
```{r}
gained.dat <- gained.dat[!is.na(gained.dat$CalcTMM),]
dim(gained.dat)
```


Analysis of Weight Gained
========================================================
- (SA1) Calculated Total Metabolic minutes does not have a clear effect on weight gain
```{r}
plot(WG~CalcTMM,data=gained.dat)

```
</small>


========================================================
- Creating a simple linear model with Weight Gained and CalcTMM. The summary output of this model suggests that CalcTMM has very little effect on weight gain, as the p-value for CalcTMM is 0.21, quite large.
```{r}
SA1.model1 <- glm(WG ~ CalcTMM, data=gained.dat,family = binomial)
```

========================================================
</small>
```{r, echo=FALSE}
summary(SA1.model1)
```
</small>

========================================================

(SA2) Effect of Shift on Weight Gained
- We created another simple linear regression with shift and weight gained (Model 1).
- The p values associated with each shift are greater than .01, suggesting shift has little effect on weight gained.

```{r}
SA2.model1 <- glm(WG ~ shift, data=gained.dat,family = binomial)
```
</small>

========================================================

```{r, echo=FALSE}
summary(SA2.model1)
```
</small>

========================================================

(SA2) Effect of Shift on Weight Gained
- We created another model predicting weight gained from the interaction between shift and CalcTMM (Model 2).
- The p values associated with each shift are still greater than .01, suggesting shift has little effect on weight gained.
```{r}
SA12.model2 <- glm(WG ~ shift*CalcTMM, data=gained.dat,family = binomial)
```

========================================================
```{r, echo=FALSE}
summary(SA12.model2)
```

========================================================
Model 3: Anthropometric Variables
- We wanted to inspect if variables such as Gender, Age, and Height affect weight gained.
- The p values associated with each shift are still greater than .01, suggesting the variables have little effect on weight gained.
```{r}
subset3a.dat <- gained.dat[which(complete.cases(gained.dat[, c("gender", "Age", "shift", "CalcTMM")])),]
SA12.model3a <- glm(WG ~ gender + Age + shift + CalcTMM, data=subset3a.dat,family = binomial)
```

========================================================
```{r,echo=FALSE}
summary(SA12.model3a)
```



========================================================
Model 4: Partition of CalcTMM
- Total Met Minutes is calculated form vig.ex.time, mod.ex.Time, and walk.ex.time
- We determined before that CalcTMM does not have a clear effect on weight gain, so we built a model with the variables that make up CalcTMM.
- Still found no significant relationships with weight gained.
```{r}
subset4a.dat <- gained.dat[which(complete.cases(gained.dat[, c("gender", "Age", "shift", "Vig.ex.Time", "Mod.ex.time", "Walk.ex.Time")])),]
SA12.model4a <- glm(WG ~ gender + Age + shift + Vig.ex.Time  + Mod.ex.time + Walk.ex.Time, data=subset4a.dat, family = binomial)
```

========================================================
```{r,echo=FALSE}
summary(SA12.model4a)
```


========================================================
All SA2 Model Comparisons
</small>
```{r, echo=FALSE}
sjPlot::tab_model(SA2.model1, SA12.model2, SA12.model3a, SA12.model4a)

```
</small>

========================================================

Model 5: model 4 with BMI and initial bodyweight.
- BMI contains height so height was excluded
- initial BMI and initial body weight had small p values, suggesting they do affect weight gain



========================================================
Model 6: Interactions between BMI, shift, and CalcTMM

-For this model, the following predictors had p-values <0.1: -shift10am:CalcTMM

-initial_BMI:shift10am:CalcTMM

-This suggests that, at significance level 0.1, these products are significant in predicting whether an employee has gained weight



```{r, echo=FALSE, include=FALSE}
gained.dat['initial_bweight'] <- gained.dat$bweight - gained.dat$pounds_gained
gained.dat['initial_BMI'] <- (gained.dat$initial_bweight / (gained.dat$height)^2)*703
```


Analysis of Pounds Gained
========================================================

```{r,echo=FALSE, include=FALSE}
sum(is.na(gained.dat$pounds_gained))
gained.dat <- gained.dat[!is.na(gained.dat$pounds_gained),]
nonzero.dat <- gained.dat[gained.dat$pounds_gained>0,]
```



```{r, echo=FALSE, include=FALSE}
SA1.model1.lm <- lm(pounds_gained ~ CalcTMM, data=nonzero.dat)
#par(mfrow=c(2,2))
#plot(SA1.model1.lm)
```

```{r,eval=FALSE,echo=FALSE, include=FALSE}
#equivalent model, just using glm instead of lm
SA1.model1.gauss <- glm(pounds_gained ~ CalcTMM, data=gained.dat,family = gaussian)
SA1b.model1.gauss <- glm(pounds_gained ~ CalcTMM, data=nonzero.dat,family = gaussian)
#summary(SA1.model1.gauss)
#par(mfrow=c(2,2))
#plot(SA1.model1.gauss)
```

```{r, echo=FALSE, include=FALSE}
par(mfrow=c(2,2))
SA1.model1.root <- lm(sqrt(pounds_gained) ~ CalcTMM, data=gained.dat)
#plot(SA1.model1.root)
```


```{r, include=FALSE, echo=FALSE}
SA1b.model1.loggauss <- glm(pounds_gained ~ CalcTMM, data=nonzero.dat,family = gaussian(link="log"))
#par(mfrow=c(2,2))
#plot(SA1b.model1.loggauss)
```

```{r, include=FALSE, echo=FALSE}
gained.dat$LBS <- round(gained.dat$pounds_gained)
nonzero.dat$LBS <- round(nonzero.dat$pounds_gained)
```

```{r, echo=FALSE, include=FALSE}
SA1.model1.poisson <- glm(LBS ~ CalcTMM, data=gained.dat,family = poisson)
#par(mfrow=c(2,2))
#plot(SA1.model1.poisson)
```


```{r, echo=FALSE, include=FALSE}
SA1.model1.quasi <- glm(pounds_gained ~ CalcTMM, data=gained.dat,family = quasipoisson)
#par(mfrow=c(2,2))
#plot(SA1.model1.quasi)
```

```{r, echo=FALSE, include=FALSE}
SA1b.model1.Gamma <- glm(pounds_gained ~ CalcTMM, data=nonzero.dat,family = Gamma)
#par(mfrow=c(2,2))
#plot(SA1b.model1.Gamma)
```

```{r, include=FALSE, echo=FALSE}
library(pscl)
```

```{r, warning=FALSE, echo=FALSE, include=FALSE}
SA1.model1.zero <- zeroinfl(LBS ~ CalcTMM, data = gained.dat)
#tab_model(SA1.model1.zero)
```


```{r, echo=FALSE, include=FALSE}
SA2.model1.lm <- lm(pounds_gained ~ shift, data=gained.dat)
#par(mfrow=c(2,2))
#plot(SA2.model1.lm)
```

```{r, echo=FALSE, include=FALSE}
SA2.model1.root <- lm(sqrt(pounds_gained) ~ shift, data=gained.dat)
#par(mfrow=c(2,2))
#plot(SA2.model1.root)
```

```{r, echo=FALSE, include=FALSE}
SA2.model1.lmlog <- lm(log(pounds_gained+0.01) ~ shift, data=gained.dat)
#par(mfrow=c(2,2))
#plot(SA2.model1.lmlog)

SA2b.model1.loggauss <- glm(pounds_gained ~ shift, data=nonzero.dat,family = gaussian(link="log"))
#par(mfrow=c(2,2))
#plot(SA2b.model1.loggauss)
```

```{r, echo=FALSE, include=FALSE}
SA2.model1.poisson <- glm(LBS ~ shift, data=gained.dat,family = poisson)
#par(mfrow=c(2,2))
#plot(SA2.model1.poisson)
#tab_model(SA2.model1.poisson)
```

```{r, echo=FALSE, include=FALSE}
SA2.model1.quasi <- glm(pounds_gained ~ shift, data=gained.dat,family = quasipoisson)
#par(mfrow=c(2,2))
#plot(SA2.model1.quasi)
#tab_model(SA2.model1.quasi)
```

```{r, echo=FALSE, include=FALSE}
SA2b.model1.Gamma <- glm(pounds_gained+0.01 ~ shift, data=gained.dat,family = Gamma)
#par(mfrow=c(2,2))
#plot(SA2b.model1.Gamma)
```

```{r, echo=FALSE, include=FALSE}
SA2.model1.zero <- zeroinfl(LBS ~ shift, data = gained.dat)
#tab_model(SA2.model1.zero)
```


```{r, include=FALSE}
SA12.best.poisson <- glm(LBS ~ initial_bweight, data=gained.dat,family = poisson)
#par(mfrow=c(2,2))
#plot(SA12.best.poisson)

SA12.best.quasi <- glm(pounds_gained ~ initial_bweight, data=gained.dat,family = quasipoisson)
#par(mfrow=c(2,2))
#plot(SA12.best.quasi)
```

```{r, include=FALSE}
SA12.best.zero <- zeroinfl(LBS ~ initial_bweight, data = gained.dat)
#tab_model(SA12.best.poisson, SA12.best.quasi, SA12.best.zero)
```



```{r,eval=FALSE,echo=FALSE,include=FALSE}
# models developed during data exploration
SA12.model4.quasi <- glm(pounds_gained ~ gender + Age + height + shift + Vig.ex.Time  + Mod.ex.time + Walk.ex.Time, data=gained.dat,family = quasipoisson)
SA12b.model4.quasi <- glm(pounds_gained ~ gender + Age + height + shift + Vig.ex.Time  + Mod.ex.time + Walk.ex.Time, data=nonzero.dat,family = quasipoisson)
#summary(SA12.model4.quasi)
#summary(SA12b.model4.quasi)
tab_model(SA12.model4.quasi, SA12b.model4.quasi)
par(mfrow=c(2,2))
plot(SA12.model4.quasi)
```

```{r,eval=FALSE,echo=FALSE,include=FALSE}
par(mfrow=c(2,2))
plot(SA12b.model4.quasi)
```


```{r,eval=FALSE,echo=FALSE,include=FALSE}
# models developed during data exploration
zero.model4 <- zeroinfl(LBS ~ gender + Age + height + shift + Vig.ex.Time + Mod.ex.time + Walk.ex.Time + initial_BMI, data = gained.dat)
#summary(zero.model4)
tab_model(zero.model4)
```


```{r,fig.width=10, fig.height=6, echo=FALSE}
par(mfrow=c(1,2))
hist(gained.dat$pounds_gained, freq = FALSE,breaks=10, main='Pounds Gained',xlab="Pounds")

hist(nonzero.dat$pounds_gained, freq = FALSE,breaks=10, main='Pounds Gained, Nonzero Only',xlab="Pounds")
```

We consider the `pounds_gained` variable and added zeros where `pounds_gained` was missing but `weightgain` was `FALSE`. These data were highly skewed, even in the absence of the added zeros. Since these data would not likely be appropriate for linear models, we consider several families of distributions.

Summary of Statistical Models (LM and GLM)
========================================================

Linear
========================================================

- $E(y_i) = \mu_{i} = \mathbf{\beta} \mathbf{X}$ 

- $y_i \sim \mathcal{N}(\mu_i,\sigma^2)$


Square Root Transformation
========================================================

- $\sqrt{y_{i}} = \mathbf{\beta} \mathbf{X}$  

- $y_i \sim \mathcal{N}(\sqrt{\mu},\sigma)$ 

The distribution of weight gain is highly left-skewed. We may correct this by applying a square-root transformation. The square-root transformation does appear to improve upon the skewness of the data, although the residuals are not clearly normally distributed.

Log
========================================================

- $\log{y_{i}} = \mathbf{\beta} \mathbf{X}$ 

- $y_i \sim \mathcal{N}(\sqrt{\mu},\sigma)$ 

The log transformation is also commonly used to correct skewed data. The log-transform, however, is not defined for 0 values. We ust add a small, nonzero value to use this tranformation on the full *pounds gained* data.

Poisson
========================================================

- $E(y_i) = \mu_{i} = n_i e^{\mathbf{\beta} \mathbf{X}}$

- $y_i \sim \frac{e^{-\lambda_i} \lambda_i ^y}{y!}$

- $Var(y_i) =  E(y_i)=\lambda$

The square root transformation is commonly applied to count data. This suggests a possible Poisson model for pounds gained. Poisson regression requires integer values. We've rounded pounds gained for this. This Poisson model provides a similar improvement on residual errors as did the square root transform. Thus, a Poisson model may be recommended for these data.


QuasiPoisson
========================================================

- $E(y_i) = \mu_{i} = n_i e^{\mathbf{\beta} \mathbf{X}}$

- $y_i \sim \frac{e^{-\lambda_i} \lambda_i ^y}{y!}$

- $Var(y_i) = \phi E(y_i)=\phi \lambda$

$\phi$ is the dispersion parameter that allows variances to be proprtional to means. The QuasiPoisson family does not require integer values. 

Gamma
========================================================

- $E(y_i) = \mu_{i} =  e^{\mathbf{\beta} \mathbf{X}}$

- $y_i \sim \frac{\beta^{\alpha}} {\Gamma(\alpha)}y_i^{\alpha-1} e^{-y_i \beta}$

The shape of the distribution of weight gain suggests a gamma distribution. However, the gamma distribution is not defined for 0 values. 

Zero-inflated Poisson
========================================================

$$
P(Y=y_i)=\begin{cases} \pi & y_i=0 \\ (1-\pi)\frac{e^{-\lambda} \lambda ^y_i}{y_i!} & y_i=1,2,... \end{cases}
$$

A first stage is modeled as binomial - weight gain is either false (0 pounds gained) or true (a non-zero pounds gained value), with a defined probability. Then, conditional on weight gain being true, the remaining values are fit to a Poisson distribution.

Summary of Continuous Model Diagnostics
========================================================

```{r,fig.width=6,fig.height=6,echo=FALSE}
par(mfrow=c(3,2))
plot(SA1.model1.lm,which=2,main = 'Linear')
plot(SA1.model1.root,which=2,main = 'Square Root')
plot(SA2.model1.lmlog,which=2,main = 'Log')
plot(SA1.model1.poisson,which=2,main = 'Poisson')
plot(SA1.model1.quasi,which=2,main = 'Quasipoisson')
plot(SA1b.model1.Gamma,which=2,main = 'Gamma')
```


Summary (Total MET Minutes)
========================================================
<small>
```{r,echo=FALSE}
sjPlot::tab_model(SA1.model1.poisson, SA1.model1.quasi, SA1.model1.zero)
```
</small>


Summary (Shift)
========================================================
<small>
```{r,echo=FALSE}
sjPlot::tab_model(SA2.model1.poisson, SA2.model1.quasi, SA2.model1.zero)
```
</small>

Summary (body weight)
========================================================
<small>
```{r,echo=FALSE}
sjPlot::tab_model(SA12.best.poisson, SA12.best.quasi, SA12.best.zero)
```
</small>

Conclusions and Recommendations
========================================================
The specific aims stated for this project are partially supported with these data. Specifically, we find no significant effect of calculated *Total MET-Minutes* (`CalcTMM`) or *shift* on `weightgain` as a binomial response, using logistic regression models. 

========================================================
However, we do find a statistical significant effect of `shift` on *pounds gained*. This result is most strongly suggested using a zero-inflated poisson model to account for the individuals reporting 0 pounds gained, and weakly supported using a quasi-poisson model to account for the excess 0 values when no weight gain is reported.

========================================================
The logistic regression model suggest that *initial body weight* or *initial BMI* are possible predictors. This was identified from a step-wise model selection algorithm implemented using the `stepAIC` function is R. We considered other combinations of variables, but the best, simplest model included only BMI or initial body weight.

========================================================
When interactions among `shift`, `CalcTMM` and `initial_BMI` are included in the model, there is a slight (but not significant at p<0.05) suggestion that weight gain may differ among shifts. Thus, initial body weight or initial BMI may be a confounding factor that influences the two variables identified in the specific aims. We note, however, that there were ~100 observations that did not have initial body weight or initial BMI, so this may warrant further investigation, and greater care should be taken when collecting data.
